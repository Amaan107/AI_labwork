# -*- coding: utf-8 -*-
"""Lab2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iRO0G2aqvadIxJU5MSmDvACJg2Mt9qAC
"""

#creating list of 10 integers
a=[1,3,5,7,9,11,13,15,17]
print('original list:',a);

#sum ,max,min
print('sum:',sum(a))
print('max:',max(a))
print('min:',min(a))

#add or remove element
a.append(24);
a.remove(1);
print('updated list:',a)

#ascending or descending list
a.sort()
print('ascending list:',a)
a.sort(reverse=True)
print('descending list:',a)

"""# **1.Lists**"""

!pip install numpy

"""# 2.**Tuples**"""

#create a tuple
fruit = ('apple','banana','cherry','mango','grape')
print('Second element:',fruit[1])
print('Last element',fruit[-1])

#tuple is immutable because modifying it will give an error
#convert tuple into list

"""# 3.**Sets**"""

#create set
set_a={1,2,3,4,5}
set_b={4,5,6,7,8}


#union
print('Union',set_a.union(set_b))

#intersection
print('Intersection',set_a.intersection(set_b))

"""# 4.**Dictionaries**"""

#create dictionary
students ={'ali':85,'sara':90,'ahmad':82}
print('students:',students)

"""# 5.**Numpy**"""

import numpy as np

# Create 1D array
arr = np.arange(1, 21)
print('1D Array:', arr)

# Reshape to 4x5 matrix
matrix = arr.reshape(4, 5)
print('4x5 Matrix:\n', matrix)

# Mean, Median, Std
print('Mean:', np.mean(arr))
print('Median:', np.median(arr))
print('Standard Deviation:', np.std(arr))

# Element-wise operations
arr2 = np.arange(21, 41)
print('Addition:', arr + arr2)
print('Multiplication:', arr * arr2)

"""# 6.**Matplotlib**"""

import matplotlib.pyplot as plt

# Line Plot
x = list(range(1, 11))
y = [i**2 for i in x]
plt.plot(x, y)
plt.title('Numbers vs Squares')
plt.xlabel('Numbers')
plt.ylabel('Squares')
plt.show()

# Bar Chart
students = ['Ali', 'Sara', 'Ahmed', 'Zara', 'Omar']
marks = [85, 90, 78, 92, 88]
plt.bar(students, marks)
plt.title('Student Marks')
plt.xlabel('Students')
plt.ylabel('Marks')
plt.show()

# Pie Chart
categories = ['Category A', 'Category B', 'Category C']
values = [30, 50, 20]
plt.pie(values, labels=categories, autopct='%1.1f%%')
plt.title('Category Distribution')
plt.show()